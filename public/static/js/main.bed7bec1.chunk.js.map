{"version":3,"sources":["logo.svg","home/Header.js","home/TextoSite.js","home/CardCategoria.js","home/Footer.js","home/CategoriaApi.js","home/HomeScreen.js","categoria/ProdutoApi.js","categoria/CategoriaScreen.js","compras/CarrinhoScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","titulo","to","src","logo","alt","TextoSite","CardCategoria","nome","img","ativo","Footer","getAll","fetch","then","res","json","catch","err","console","error","message","Error","HomeScreen","history","useHistory","useState","loading","setLoading","categorias","setCategorias","msg","setMsg","useEffect","a","valores","fetchData","data-testid","onClick","push","filter","cat","ativa","map","key","id","img128","get","idCategoria","CategoriaScreen","adicionarProduto","useParams","produtos","setProdutos","valoresCategorias","valoresProdutos","items","label","c","command","className","model","prod","descricao","preco","icon","iconPos","CarrinhoScreen","compras","limpar","remover","produto","quantidade","App","setCompras","exact","path","item","find","log","JSON","stringify","itens","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bed7bec1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport logo from '../logo.svg';\n\nexport default function Header({titulo = 'Loja Virtual'}) {\n  return (\n    <header>\n      <Link to={'/'}>\n        <img src={logo} alt=\"logo do site\"/>\n      </Link>\n      <h1>{titulo}</h1>\n    </header>\n  );\n}\n\n","import React from 'react';\n\nexport default function TextoSite() {\n  return (\n    <p>\n      Texto que introduz o negócio e o serviço para o usuário e permite\n      ao usuário navegar para qualquer uma das quatro categorias de \n      produtos.\n    </p>\n  )\n}","import React from 'react';\n\nexport default function CardCategoria({nome, ativo, img}) {\n  return (\n    <div>\n      <h6>{nome}</h6>\n      <img src={img} alt={nome}/>\n    </div>\n  )\n}","import React from 'react';\n\nexport default function Footer() {\n  return (\n    <footer>\n      Newton Paiva 2020 - Todos os direitos reservados\n    </footer>\n  )\n}","\n\nexport function getAll() {\n  return fetch('https://lojavirtual-api--tarleylana.repl.co/api/v1/categorias/')\n            .then(res => res.json())\n            .catch(err => {\n              console.error('Falha ao tentar obter todas as categorias ' + err.message);\n              throw new Error('Não foi possivel recuperar as categorias. Favor tentar novamente.')\n            })\n}\n\nexport function insert() {\n  \n}","import React, {useState, useEffect} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\n\nimport Header from './Header';\nimport TextoSite from './TextoSite';\nimport CardCategoria from './CardCategoria';\nimport Footer from './Footer';\n\nimport './HomeScreen.css';\n\nimport {getAll} from './CategoriaApi';\n/*\nconst valores = [\n  {id: 1, nome: \"Categoria 1\", ativa: true},\n  {id: 2, nome: \"Categoria 2\", ativa: true},\n  {id: 3, nome: \"Categoria 3\", ativa: true},\n  {id: 4, nome: \"Categoria 4\", ativa: true},\n  {id: 5, nome: \"Categoria 5\", ativa: false},\n  {id: 6, nome: \"Categoria 6\", ativa: true},\n  {id: 7, nome: \"Categoria 7\", ativa: true},\n  {id: 8, nome:\"Categoria 8\", ativa: true},\n  {id: 9, nome:\"Categoria 9\", ativa: true}\n]\n*/\n\nfunction HomeScreen() {\n  const history = useHistory();\n\n  const [loading, setLoading] = useState(true);\n  const [categorias, setCategorias] = useState([]);\n  const [msg, setMsg] = useState();\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const valores = await getAll();\n        setCategorias(valores);\n      } catch(err) {\n        setMsg(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, [])\n\n  return (\n    <>\n      <Header />\n      <section data-testid=\"homeSection\">\n        <article>\n          <TextoSite />\n        </article>\n        <aside>\n            {loading && <h1>Carregando...</h1>}\n            {msg && <h1>\n                      {msg}\n                      <button onClick={history.push('/')} >Atualizar</button>\n                    </h1>}\n            {\n              categorias\n                .filter(cat => cat.ativa === true)\n                .map( cat => (\n                  <Link key={cat.id} to={`/categorias/${cat.id}`}>\n                    <CardCategoria\n                      nome={cat.nome} \n                      ativo={cat.ativa}\n                      img={cat.img128}\n                    />\n                  </Link>\n              ))\n          }\n        </aside>\n      </section>\n      <Footer />\n    </>\n  )\n}\n\nexport default HomeScreen;","\nexport function get(idCategoria) {\n  return fetch('https://lojavirtual-api--tarleylana.repl.co/api/v1/produtos?idCategoria=' + idCategoria)\n          .then(res => res.json())\n          .catch(err => {\n            console.error(`Falha ao tentar obter todas os produtos da categoria ${idCategoria}. Motivo: ${err.message}`);\n            return [];\n          })\n}","import React, {useState, useEffect} from 'react';\n\nimport {\n  useHistory,\n  useParams\n} from 'react-router-dom';\n\nimport { Button } from 'primereact/button';\nimport {Menu} from 'primereact/menu';\n\nimport 'primeicons/primeicons.css';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.css';\nimport 'primeflex/primeflex.css';\n\nimport Header from '../home/Header';\nimport Footer from  '../home/Footer';\n\nimport './CategoriaScreen.css';\n\nimport {getAll} from '../home/CategoriaApi';\nimport {get} from './ProdutoApi';\n\n/*\nconst categorias = [\n  {nome: \"Categoria 1\", ativa: true},\n  {nome: \"Categoria 2\", ativa: true},\n  {nome: \"Categoria 3\", ativa: true},\n  {nome: \"Categoria 4\", ativa: true},\n]\n\nconst produtos = [\n  {nome: 'Produto 1', descricao: 'Descrição do produto 1', imagem: '[Imagem do produto]'},\n  {nome: 'Produto 2', descricao: 'Descrição do produto 2', imagem: '[Imagem do produto]'},\n  {nome: 'Produto 3', descricao: 'Descrição do produto 3', imagem: '[Imagem do produto]'},\n  {nome: 'Produto 4', descricao: 'Descrição do produto 4', imagem: '[Imagem do produto]'},\n]\n*/\n\nexport default function CategoriaScreen({adicionarProduto}) {\n  const history = useHistory();\n  const {id} = useParams()\n\n  const [loading, setLoading] = useState(true);\n  const [categorias, setCategorias] = useState([]);\n  const [produtos, setProdutos] = useState([]);\n  \n  useEffect(() => {\n    async function fetchData() {\n      const valoresCategorias = await getAll();\n      setCategorias(valoresCategorias);\n\n      setLoading(false);\n    }\n\n    fetchData();\n  }, [])\n\n  useEffect(() => {\n    async function fetchData() {\n      const valoresProdutos = await get(id);\n      setProdutos(valoresProdutos);\n    }\n\n    fetchData();\n  }, [id])\n\n  const items = [\n    {\n        label: 'Quer ver outra categoria?',\n        items: categorias.map( c => {\n          return  {\n            label: c.nome,\n            command: () => history.push(`/categorias/${c.id}`)\n          }\n        })\n    }\n  ];\n\n  return (\n    <>\n      <Header titulo={`Categoria  ${id}`}/>\n      <nav>\n        <Button \n          label=\"Ver Carrinho de Compras\"\n          className=\"p-button-success\"\n          onClick={() => history.push('/compras')}\n        />\n      </nav>\n      <section>\n        <nav>\n          <ul>\n            {/*\n              categorias.map(cat => (\n                  <Link key={cat.id} to={`/categorias/${cat.id}`}>\n                    <li>{cat.nome}</li>\n                  </Link>\n              ))\n            */}\n\n            <Menu model={items}/>\n          </ul>\n        </nav>\n        \n        {/* TABELA DE PRODUTOS */}\n        <aside>\n          {loading && <h1>Carregando...</h1>}\n          <table>\n            <thead>\n              <tr>\n                <th>Imagem</th>\n                <th>Nome</th>\n                <th>Preço</th>\n                <th>Ação</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {\n                produtos.map(prod => (\n                  <tr key={prod.id}>\n                    <td><img src={prod.img} alt={prod.nome} /></td>\n                    <td>\n                      <p>{prod.nome}</p>\n                      <p>{prod.descricao}</p>\n                    </td>\n                    <td>{prod.preco}</td>\n                    <td>\n                      <Button \n                        label=\"Comprar\"\n                        icon=\"pi pi-check\"\n                        iconPos=\"right\"\n                        onClick={() => adicionarProduto(prod)}\n                      />\n                    </td>\n                  </tr>\n\n                ))\n\n              }\n            </tbody>\n\n\n          </table>\n        </aside>\n      </section>\n      <Footer />\n    </>\n  )\n}","import React from 'react';\n\nimport {useHistory} from 'react-router-dom';\n\nimport Header from '../home/Header';\nimport Footer from '../home/Footer';\n\nimport './CarrinhoScreen.css';\n\nexport default function CarrinhoScreen({compras, limpar, remover}) {\n\n  const history = useHistory();\n\n  return(\n    <>\n      <Header />\n      <nav id=\"botoes-nav\">\n        <button onClick={() => limpar()}>Limpar carrinho</button>\n        <button onClick={() => history.push('/')}>Continuar comprando</button>\n        <button>Finalizar compra</button>\n      </nav>\n      <section id=\"section-total\">\n        <span>Total da compra:</span>\n        <span> R$ 1.587,55</span>\n      </section>\n      <section> \n         <table>\n          <thead>\n            <tr>\n              <th>Imagem</th>\n              <th>Nome</th>\n              <th>Quantidade</th>\n              <th>Preço</th>\n              <th>Total</th>\n              <th>Ação</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              compras.map(c => (\n                <tr key={c.produto.id}>\n                  <td>\n                    <img src={c.produto.img} alt={c.produto.nome}/>\n                  </td>\n                  <td>{c.produto.nome}</td>\n                  <td>{c.quantidade}</td>\n                  <td>{c.produto.preco}</td>\n                  <td>{c.quantidade * c.produto.preco}</td>\n                  <td>\n                    <button onClick={() => remover(c)}>\n                      Remover\n                    </button>\n                  </td>\n                </tr>\n              ))\n            }\n          </tbody>\n         </table>\n      </section>\n      <Footer />\n    </>\n  )\n}","import React, {useState} from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from 'react-router-dom';\n\n\nimport './App.css';\n\nimport HomeScreen from './home/HomeScreen';\nimport CategoriaScreen from './categoria/CategoriaScreen';\nimport CarrinhoScreen from './compras/CarrinhoScreen';\n\nfunction App() {\n\n  const [compras, setCompras] = useState([]);\n\n  function adicionarProduto(produto) {\n    let item = compras.find(c => c.produto.id === produto.id);\n\n    if(!item) {\n      item = {\n        produto,\n        quantidade: 1\n      }\n\n      compras.push(item);\n    } else {\n      item.quantidade = item.quantidade + 1;\n    }\n    \n    setCompras(compras);\n\n    console.log('adicionarProduto', JSON.stringify(compras));\n  }\n\n  function limparCompras() {\n    setCompras([]);\n  }\n\n  function removerProduto(item) {\n    const itens = compras.filter(c => c.produto.id !== item.produto.id)\n\n    setCompras(itens);\n  }\n\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          <Route exact={true} path=\"/\">\n              <HomeScreen />\n          </Route>\n          <Route path=\"/categorias/:id\">\n              <CategoriaScreen adicionarProduto={adicionarProduto} />\n          </Route>\n          <Route path=\"/compras\">\n              <CarrinhoScreen \n                compras={compras} \n                limpar={limparCompras}\n                remover={removerProduto}\n              />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </>\n  )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}